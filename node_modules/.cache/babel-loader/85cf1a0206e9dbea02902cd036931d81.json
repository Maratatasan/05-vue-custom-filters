{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { ComponentUtil } from 'ag-grid-community';\nexport var kebabProperty = function kebabProperty(property) {\n  return property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\nexport var kebabNameToAttrEventName = function kebabNameToAttrEventName(kebabName) {\n  // grid-ready for example would become onGrid-ready in Vue\n  return \"on\" + kebabName.charAt(0).toUpperCase() + kebabName.substring(1, kebabName.length);\n};\nexport var getAgGridProperties = function getAgGridProperties() {\n  var props = {}; // for example, 'grid-ready' would become 'onGrid-ready': undefined\n  // without this emitting events results in a warning\n  // and adding 'grid-ready' (and variations of this to the emits option in AgGridVue doesn't help either)\n\n  var eventNameAsProps = ComponentUtil.PUBLIC_EVENTS.map(function (eventName) {\n    return kebabNameToAttrEventName(kebabProperty(eventName));\n  });\n  eventNameAsProps.forEach(function (eventName) {\n    return props[eventName] = undefined;\n  });\n  var watch = {};\n  ComponentUtil.ALL_PROPERTIES.filter(function (propertyName) {\n    return propertyName != 'gridOptions';\n  }) // dealt with in AgGridVue itself\n  .forEach(function (propertyName) {\n    props[propertyName] = {};\n    watch[propertyName] = {\n      handler: function handler(currentValue, previousValue) {\n        this.processChanges(propertyName, currentValue, previousValue);\n      },\n      deep: propertyName !== 'popupParent' && propertyName !== 'context'\n    };\n  });\n  return [props, watch];\n};","map":{"version":3,"mappings":";;;;;;;AAAA,SAAQA,aAAR,QAA4B,mBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAiB;EAC1C,OAAOA,QAAQ,CAACC,OAAT,CAAiB,iBAAjB,EAAoC,OAApC,EAA6CC,WAA7C,EAAP;AACH,CAFM;AAIP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,SAAD,EAAkB;EACtD;EACA,OAAO,OAAKA,SAAS,CAACC,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,EAAL,GAAyCF,SAAS,CAACG,SAAV,CAAoB,CAApB,EAAuBH,SAAS,CAACI,MAAjC,CAAhD;AACH,CAHM;AASP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;EAC/B,IAAMC,KAAK,GAAe,EAA1B,CAD+B,CAG/B;EACA;EACA;;EACA,IAAMC,gBAAgB,GAAGb,aAAa,CAACc,aAAd,CAA4BC,GAA5B,CAAgC,UAACC,SAAD,EAAkB;IAAK,+BAAwB,CAACf,aAAa,CAACe,SAAD,CAAd,CAAxB;EAAkD,CAAzG,CAAzB;EACAH,gBAAgB,CAACI,OAAjB,CAAyB,UAACD,SAAD,EAAkB;IAAK,YAAK,CAACA,SAAD,CAAL,GAAmBE,SAAnB;EAA4B,CAA5E;EAEA,IAAMC,KAAK,GAAe,EAA1B;EAEAnB,aAAa,CAACoB,cAAd,CACKC,MADL,CACY,UAACC,YAAD,EAAqB;IAAK,mBAAY,IAAI,aAAhB;EAA6B,CADnE,EACqE;EADrE,CAEKL,OAFL,CAEa,UAACK,YAAD,EAAqB;IAC1BV,KAAK,CAACU,YAAD,CAAL,GAAsB,EAAtB;IAEAH,KAAK,CAACG,YAAD,CAAL,GAAsB;MAClBC,OAAO,EAAP,iBAAQC,YAAR,EAA2BC,aAA3B,EAA6C;QACzC,KAAKC,cAAL,CAAoBJ,YAApB,EAAkCE,YAAlC,EAAgDC,aAAhD;MACH,CAHiB;MAIlBE,IAAI,EAAEL,YAAY,KAAK,aAAjB,IAAkCA,YAAY,KAAK;IAJvC,CAAtB;EAMH,CAXL;EAaA,OAAO,CAACV,KAAD,EAAQO,KAAR,CAAP;AACH,CAzBM","names":["ComponentUtil","kebabProperty","property","replace","toLowerCase","kebabNameToAttrEventName","kebabName","charAt","toUpperCase","substring","length","getAgGridProperties","props","eventNameAsProps","PUBLIC_EVENTS","map","eventName","forEach","undefined","watch","ALL_PROPERTIES","filter","propertyName","handler","currentValue","previousValue","processChanges","deep"],"sourceRoot":"","sources":["../src/Utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}