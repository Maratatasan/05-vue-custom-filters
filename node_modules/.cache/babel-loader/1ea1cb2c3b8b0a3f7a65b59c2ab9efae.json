{"ast":null,"code":"import \"core-js/modules/es.object.is-frozen.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.function.bind.js\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { defineComponent, h } from 'vue';\nimport { markRaw, toRaw } from '@vue/reactivity';\nimport { ComponentUtil, Grid } from 'ag-grid-community';\nimport { VueFrameworkComponentWrapper } from './VueFrameworkComponentWrapper';\nimport { getAgGridProperties } from './Utils';\nimport { AgGridColumn } from './AgGridColumn';\nimport { VueFrameworkOverrides } from './VueFrameworkOverrides';\nvar ROW_DATA_EVENTS = ['rowDataChanged', 'rowDataUpdated', 'cellValueChanged', 'rowValueChanged'];\nvar DATA_MODEL_ATTR_NAME = 'onUpdate:modelValue'; // emit name would be update:ModelValue\n\nvar DATA_MODEL_EMIT_NAME = 'update:modelValue';\n\nvar _a = getAgGridProperties(),\n    props = _a[0],\n    watch = _a[1];\n\nexport var AgGridVue = defineComponent({\n  render: function render() {\n    return h('div');\n  },\n  props: __assign({\n    gridOptions: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    autoParamsRefresh: {\n      type: Boolean,\n      \"default\": function _default() {\n        return false;\n      }\n    },\n    componentDependencies: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    plugins: [],\n    modules: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    modelValue: {\n      type: Array,\n      \"default\": undefined,\n      required: false\n    }\n  }, props),\n  data: function data() {\n    return {\n      gridCreated: false,\n      isDestroyed: false,\n      gridReadyFired: false,\n      emitRowModel: undefined\n    };\n  },\n  watch: __assign({\n    modelValue: {\n      handler: function handler(currentValue, previousValue) {\n        this.processChanges('rowData', currentValue, previousValue);\n      },\n      deep: true\n    }\n  }, watch),\n  methods: {\n    globalEventListener: function globalEventListener(eventType, event) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      if (eventType === 'gridReady') {\n        this.gridReadyFired = true;\n      }\n\n      this.updateModelIfUsed(eventType);\n    },\n    processChanges: function processChanges(propertyName, currentValue, previousValue) {\n      if (this.gridCreated) {\n        if (this.skipChange(propertyName, currentValue, previousValue)) {\n          return;\n        }\n\n        var changes = {};\n        changes[propertyName] = {\n          // decouple the row data - if we don't when the grid changes row data directly that'll trigger this component to react to rowData changes,\n          // which can reset grid state (ie row selection)\n          currentValue: propertyName === 'rowData' ? Object.isFrozen(currentValue) ? currentValue : markRaw(toRaw(currentValue)) : currentValue,\n          previousValue: previousValue\n        };\n        ComponentUtil.processOnChange(changes, this.gridOptions, this.gridOptions.api, this.gridOptions.columnApi);\n      }\n    },\n    checkForBindingConflicts: function checkForBindingConflicts() {\n      var thisAsAny = this;\n\n      if ((thisAsAny.rowData || this.gridOptions.rowData) && thisAsAny.modelValue) {\n        console.warn('AG Grid: Using both rowData and v-model. rowData will be ignored.');\n      }\n    },\n    getRowData: function getRowData() {\n      var rowData = [];\n      this.gridOptions.api.forEachNode(function (rowNode) {\n        rowData.push(rowNode.data);\n      });\n      return rowData;\n    },\n    updateModelIfUsed: function updateModelIfUsed(eventType) {\n      if (this.gridReadyFired && this.$attrs[DATA_MODEL_ATTR_NAME] && ROW_DATA_EVENTS.indexOf(eventType) !== -1) {\n        if (this.emitRowModel) {\n          this.emitRowModel();\n        }\n      }\n    },\n    getRowDataBasedOnBindings: function getRowDataBasedOnBindings() {\n      var thisAsAny = this;\n      var rowData = thisAsAny.modelValue;\n      return rowData ? rowData : thisAsAny.rowData ? thisAsAny.rowData : thisAsAny.gridOptions.rowData;\n    },\n\n    /*\n    * Prevents an infinite loop when using v-model for the rowData\n    */\n    skipChange: function skipChange(propertyName, currentValue, previousValue) {\n      if (this.gridReadyFired && propertyName === 'rowData' && this.$attrs[DATA_MODEL_ATTR_NAME]) {\n        if (currentValue === previousValue) {\n          return true;\n        }\n\n        if (currentValue && previousValue) {\n          var currentRowData = currentValue;\n          var previousRowData = previousValue;\n\n          if (currentRowData.length === previousRowData.length) {\n            for (var i = 0; i < currentRowData.length; i++) {\n              if (currentRowData[i] !== previousRowData[i]) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    debounce: function debounce(func, delay) {\n      var timeout;\n      return function () {\n        var later = function later() {\n          func();\n        };\n\n        window.clearTimeout(timeout);\n        timeout = window.setTimeout(later, delay);\n      };\n    }\n  },\n  mounted: function mounted() {\n    var _this = this; // we debounce the model update to prevent a flood of updates in the event there are many individual\n    // cell/row updates\n\n\n    this.emitRowModel = this.debounce(function () {\n      _this.$emit(DATA_MODEL_EMIT_NAME, Object.freeze(_this.getRowData()));\n    }, 20);\n    var frameworkComponentWrapper = new VueFrameworkComponentWrapper(this); // the gridOptions we pass to the grid don't need to be reactive (and shouldn't be - it'll cause issues\n    // with mergeDeep for example\n\n    var gridOptions = markRaw(ComponentUtil.copyAttributesToGridOptions(toRaw(this.gridOptions), this));\n    this.checkForBindingConflicts();\n    var rowData = this.getRowDataBasedOnBindings();\n    gridOptions.rowData = rowData ? Object.isFrozen(rowData) ? rowData : markRaw(toRaw(rowData)) : rowData;\n\n    if (AgGridColumn.hasChildColumns(this.$slots)) {\n      gridOptions.columnDefs = AgGridColumn.mapChildColumnDefs(this.$slots);\n    }\n\n    var gridParams = {\n      globalEventListener: this.globalEventListener.bind(this),\n      frameworkOverrides: new VueFrameworkOverrides(this),\n      providedBeanInstances: {\n        frameworkComponentWrapper: frameworkComponentWrapper\n      },\n      modules: this.modules\n    };\n    new Grid(this.$el, gridOptions, gridParams);\n    this.gridCreated = true;\n  },\n  unmounted: function unmounted() {\n    if (this.gridCreated) {\n      if (this.gridOptions.api) {\n        this.gridOptions.api.destroy();\n      }\n\n      this.isDestroyed = true;\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["defineComponent","h","markRaw","toRaw","ComponentUtil","Grid","VueFrameworkComponentWrapper","getAgGridProperties","AgGridColumn","VueFrameworkOverrides","ROW_DATA_EVENTS","DATA_MODEL_ATTR_NAME","DATA_MODEL_EMIT_NAME","props","watch","AgGridVue","render","gridOptions","type","Object","autoParamsRefresh","Boolean","componentDependencies","Array","plugins","modules","modelValue","undefined","required","data","gridCreated","isDestroyed","gridReadyFired","emitRowModel","handler","currentValue","previousValue","processChanges","deep","methods","globalEventListener","eventType","event","updateModelIfUsed","propertyName","skipChange","changes","isFrozen","processOnChange","api","columnApi","checkForBindingConflicts","thisAsAny","rowData","console","warn","getRowData","forEachNode","rowNode","push","$attrs","indexOf","getRowDataBasedOnBindings","currentRowData","previousRowData","length","i","debounce","func","delay","timeout","later","window","clearTimeout","setTimeout","mounted","_this","$emit","freeze","frameworkComponentWrapper","copyAttributesToGridOptions","hasChildColumns","$slots","columnDefs","mapChildColumnDefs","gridParams","bind","frameworkOverrides","providedBeanInstances","$el","unmounted","destroy"],"sourceRoot":"","sources":["../src/AgGridVue.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}